"""
- coworking
- profile

"""

from sys import prefix
import typing as tp
import asyncio

from aiogram import types, Router, F

from aiogram.filters import CommandStart, Command, or_f
from aiogram.filters.command import CommandObject
from aiogram.utils.markdown import hbold
from aiogram.utils.i18n import gettext as _
from bot.settings import Settings

from repositories.users.base import UserRepositoryBase

from ..keyboards.menu import menu_keyboard, base_menu_reply_key, MainMenuCallback

from repositories.users.models import TelegramUser


router: tp.Final[Router] = Router(name="common")


@router.message(CommandStart())
async def command_start_handler(
    message: types.Message,
    command: CommandObject,
    tg_user: TelegramUser,
    settings: Settings,
    user_repo: UserRepositoryBase,
) -> None:
    if command.args:
        code = command.args
        try:
            if code != "broadcast":
                user_repo.use_invite_code(code, tg_user.tg_id)
                await message.answer(
                    _(
                        """–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ä–∞—Ç–æ—Ä–∞
    –ø–æ—á—Ç–∏ –≤ –∫–∞–∂–¥–æ–º —Ä–∞–∑–¥–µ–ª–µ –±–æ—Ç–∞ –µ—Å—Ç—å –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ä–∞–∑–¥–µ–ª–æ–º"""
                    )
                )
        except Exception as e:
            await message.answer(_("""–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫"""))

    if message.from_user is None:
        return

    username = hbold(tg_user.username or tg_user.first_name)
    await message.answer(
        text=_("Hello , {username}!").format(username=username),
        reply_markup=base_menu_reply_key(),
    )
    await asyncio.sleep(0.5)
    await message.answer(
        text=_("üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º ITAM.Bot!\n\n‚ùó –ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–∏–º —Ç–µ–±—è –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é ‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, —ç—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –Ω–∞—à–∏–º –∫—Ä—É—Ç—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º. \n(PS –º—ã –≥–æ—Ç–æ–≤–∏–º –±–æ–ª—å—à–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–µ –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –ø–æ–ª—É—á–∞—Ç—å –ø–ª—é—à–∫–∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!)\n\nüëÄ –ó–∞—Ö–æ–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª üè¢ –ö–ª—É–±—ã –∏ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–ª—É–±—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã!"),
        reply_markup=base_menu_reply_key(),
    )
    await asyncio.sleep(0.5)
    await message.answer(
        text = _("–¢–µ–∫—Å—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"),
        reply_markup=menu_keyboard()
    )

#handle menu via replyKeyboard
@router.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def menu_handler(message: types.Message) -> None:
    await message.answer(
        text=_("–¢–µ–∫—Å—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"),
        reply_markup=menu_keyboard(),
    )


@router.callback_query(MainMenuCallback.filter(F.next_menu_prefix == "menu"))
async def menu_callbacks(callback: types.CallbackQuery) -> None:
    msg_text = _("–¢–µ–∫—Å—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é")
    markup = menu_keyboard()
    if not callback.message:
        await callback.answer(
            text=msg_text,
            reply_markup=markup,
        )
    else:
        await callback.message.edit_text(msg_text, reply_markup=markup)
        await callback.answer()


@router.callback_query(MainMenuCallback.filter(F.next_menu_prefix == "help"))
async def help_callbacks(callback: types.CallbackQuery) -> None:
    msg_text = _("""–¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏ –Ω–∞ /help –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é""")
    markup = menu_keyboard()
    if not callback.message:
        await callback.answer(
            text=msg_text,
            reply_markup=markup,
        )
    else:
        await callback.message.edit_text(msg_text, reply_markup=markup)
        await callback.answer()


@router.message(Command("help", prefix="/"))
async def help_handler(message: types.Message) -> None:
    await message.answer(
        _("""–¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏ –Ω–∞ /help –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""),
        reply_markup=menu_keyboard(),
    )
